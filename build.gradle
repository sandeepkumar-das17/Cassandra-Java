/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'

apply plugin: 'eclipse'

apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    maven {
    url '<custom repository>'
  	}
  	mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Cassandra Utility',
        	'Implementation-Version': '1.0.0',
        	'Main-Class': 'com.sandeep.myexamples.cassandra'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

mainClassName = "com.sandeep.myexamples.cassandra"
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'
    

	compile group: 'org.json', name: 'json', version: '20170516'
  compile group: 'io.netty', name: 'netty-all', version: '4.1.6.Final'  
	compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
  compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
  compile group: 'com.codahale.metrics', name: 'metrics-core', version: '3.0.2'
  compile group: 'com.google.guava', name: 'guava', version: '19.0'
	compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.3'
  
	compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '3.3.0'
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
	compile group: 'org.apache.cassandra', name: 'cassandra-all', version: '3.11.0'

// Use below to include customer jars
runtime files('libs/mnist-tools.jar', 'libs/gson-2.2.4.jar')
    runtime fileTree(dir: 'libs', include: '*.jar')
    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
}
